import xlrd
from nltk.tokenize import PunktSentenceTokenizer,sent_tokenize, word_tokenize
#### 1.  Create the segments from each video
import pandas as pd
import xlsxwriter
import os

#### The characterisation work
################################################################################
import nltk
import codecs
import pronto
import itertools
#import owlready
#from owlready import *

from nltk.corpus import stopwords, wordnet
nltk.download('stopwords')
nltk.download('punkt')
nltk.download('wordnet')
from nltk.stem import WordNetLemmatizer, PorterStemmer
import signal, ctypes
from pronto import Ontology
from pronto import *
import re

from pandas import DataFrame
import math
from difflib import SequenceMatcher
import sys
import collections
from collections import Counter
import statistics 
from nltk.wsd import lesk
from nltk.corpus import wordnet as wn
lemmatizer = WordNetLemmatizer()

###############################################################################
videosExcelFile='PresentationSkill Videos With views 100K and more-usingyoutube library.xlsx'    
xls1= pd.ExcelFile(videosExcelFile)
#xls2= pd.ExcelFile('JavaProgrammingDomainSegments3MinutesEach.xlsx')

workbook = xlsxwriter.Workbook('Pres Videos To 6 sentences using Full Stop as Delimiter.xlsx')

# Get the sheets from both excel workbooks
presentationSheetNames=xls1.sheet_names
#javaSheetNames=xls2.sheet_names

# calculate howmany videos I can create by joining segmnet from both domain.I need 5 segments from each domain to create 30 minutes video
# no of segments from presentation domain is less than from Jave, so I will use it to claculate # videos to avoid out of range issue

noOfVideos=len(presentationSheetNames)
print('# of videos = ',noOfVideos)
#print(sheetNames)

### Get the segments with thier metadata for the first video
allArtificialVideos=[]
artificialVideo=[]
videoMetaData=[]
artificialVideoWithoutTime=[]
allArtificialVideosWithoutTime=[]
counterOfDomainVideo=0
df_idP=[]
df_topicP=[]
df_textP=[]
df_timeP=[]
df_Video=[]
for i in  range(noOfVideos):       
    presentationSheetIteration = pd.read_excel(videosExcelFile, sheet_name=presentationSheetNames[i])
    
       
    ####### Get the presentation segment
    df_idP=presentationSheetIteration['VideoId'].tolist()
    
            
    df_Video.append([presentationSheetIteration['VideoId'].tolist()[0],
                     presentationSheetIteration['Transcript Time'].tolist(),
                     presentationSheetIteration['Transcript Text'].tolist()])
    
    
    #df_topicP.append(presentationSheetIteration['Topic'])
    

allVideosSeg=[]
for v in df_Video:
    
    videoTime=v[1]
    videoTranscript=v[2]
    
    segTime=[]
    segText=[]
    segment=[]
    wordsCollected=[]
    start=0
    fullStopFound='False'
    videoSegemnts=[]

    for i in range(start,len(videoTime)):
            #print(videoTime[i],'    ',videoTime.index(videoTime[i]),'    ',videoTranscript[i].split())
            #print()




            newLine=videoTranscript[i].split()# for each text line in the transcript, split it into list of words
            #print('newLine = ',newLine)
            #print()
            segText.append(videoTranscript[i])
            #print('segText = ',segText)

            #numberOfword=len(newLine)# count ho mqany word per line
            #print('start = ',start)
            for j in range(0, len(newLine)):

                if newLine[j][-1]!='.':
                    #print('text =',newLine[j][-1])
                    if videoTime[i] not in segTime:
                        segTime.append(videoTime[i])
                        wordsCollected.append(newLine[j])

                else:
                    #print('segTime = ',segTime)
                    #print()
                    if segTime:
                        segment.append([segTime[0],segTime[-1],segText])
                        videoSegemnts.append([segTime[0],segTime[-1],segText])
                        #print('segment= ',segment)
                        #print()
                    segment=[]
                    segText=[]
                    segTime=[]
                    strat=videoTime[i]
                    #break

    segm= videoSegemnts[-1] 
    segment=[]
    #print(videoTime.index(segm[1]))
    temptimeList=[]
    tempText=[]
    if segm[1] != videoTime[-1]:
        start=videoTime.index(segm[1])
        for i in range(start,len(videoTime)):
            temptimeList.append(videoTime[i])
            tempText.append(videoTranscript[videoTime.index(videoTime[i])])
    if len(temptimeList)>1:

        videoSegemnts.append([temptimeList[0],temptimeList[-1],tempText])
        
        
    elif len(temptimeList)==1:
        videoSegemnts.append([temptimeList[0],tempText])
        
    allVideosSeg.append([v[0],videoSegemnts])
    videoSegemnts=[]


# Write the result to Excel file
worksheet = workbook.add_worksheet('sheet2')
worksheet.write('A1', 'SegmentId')
worksheet.write('B1', 'StartTime')
worksheet.write('C1', 'EndTime')
worksheet.write('D1', 'Transcript')
row=1
col=0

for i in allVideosSeg:
    col=0
    count=1
    
    
    # start,end and transcript are saved as second element in i=1
    for j in i[1]:
        worksheet.write(row,col,str(i[0])+str(count))
        
        worksheet.write(row,col+1,j[0]) # write the start time
        worksheet.write(row,col+2,j[1]) # write the end time
        tempCol=col+3
        
        if j[2]:
            for k in j[2]:
                
                worksheet.write(row,tempCol,k)
               
                row+=1
        else:
            worksheet.write(row,tempCol,'')
            row+=1
        count+=1
    
      
workbook.close()
   









